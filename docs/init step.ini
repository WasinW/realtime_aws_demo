‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Ñ‡∏£‡∏±‡∏ö! Terraform ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏Ñ‡πà infrastructure ‡πÅ‡∏ï‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ setup users, databases, ‡πÅ‡∏•‡∏∞ configurations ‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏°‡∏≤‡∏î‡∏π step-by-step ‡∏Å‡∏±‡∏ô‡∏Ñ‡∏£‡∏±‡∏ö:

## üìã Post-Terraform Checklist

### 1. Configure kubectl
```bash
# Get EKS cluster name and configure kubectl
aws eks update-kubeconfig --region ap-southeast-1 --name oracle-cdc-demo-eks
```

### 2. Install Strimzi Kafka Operator
```bash
# Create namespace
kubectl create namespace kafka

# Install Strimzi
kubectl apply -f 'https://strimzi.io/install/latest?namespace=kafka' -n kafka

# Wait for operator
kubectl wait --for=condition=ready pod -l name=strimzi-cluster-operator -n kafka --timeout=300s
```

### 3. Deploy Kafka Cluster (Demo mode)
```bash
kubectl apply -f kubernetes/kafka/01-kafka-cluster.yaml
kubectl wait --for=condition=ready kafka/demo-kafka-cluster -n kafka --timeout=600s
```

### 4. Initialize Oracle Database
```bash
# Get RDS endpoint
RDS_ENDPOINT=$(cd terraform/environments/demo && terraform output -raw rds_endpoint)

# Connect to Oracle and run init script
# ‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á run scripts/init/01-init-oracle-db.sql ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á:
# - Enable supplemental logging
# - Create CDC user (cdc_user)
# - Create Debezium user
# - Create tables (customers, products, orders)
# - Grant permissions
```

**SQL Script ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á run (scripts/init/01-init-oracle-db.sql):**
```sql
-- Enable CDC
ALTER DATABASE ADD SUPPLEMENTAL LOG DATA;
ALTER DATABASE ADD SUPPLEMENTAL LOG DATA (ALL) COLUMNS;

-- Create CDC user
CREATE USER cdc_user IDENTIFIED BY "CdcDemo2024!";
GRANT CREATE SESSION, CREATE TABLE, CREATE SEQUENCE TO cdc_user;
GRANT UNLIMITED TABLESPACE TO cdc_user;

-- Create Debezium user
CREATE USER debezium IDENTIFIED BY "D3b3z1um#2024";
GRANT CREATE SESSION TO debezium;
GRANT SELECT ON V_$DATABASE TO debezium;
GRANT FLASHBACK ANY TABLE TO debezium;
GRANT SELECT ANY TRANSACTION TO debezium;
GRANT LOGMINING TO debezium;

-- Create tables with CDC enabled...
```

### 5. Initialize Redshift
```bash
# Get Redshift endpoint
REDSHIFT_ENDPOINT=$(cd terraform/environments/demo && terraform output -raw redshift_endpoint)

# Run scripts/init/02-init-redshift.sql
# Creates:
# - Schemas (staging, marts)
# - Target tables
# - Materialized views
```

### 6. Create Kafka Topics
```bash
# For demo Kafka in K8s
kubectl apply -f - <<EOF
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  name: oracle.cdc.customers
  namespace: kafka
  labels:
    strimzi.io/cluster: demo-kafka-cluster
spec:
  partitions: 3
  replicas: 1
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  name: oracle.cdc.products
  namespace: kafka
  labels:
    strimzi.io/cluster: demo-kafka-cluster
spec:
  partitions: 3
  replicas: 1
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  name: oracle.cdc.orders
  namespace: kafka
  labels:
    strimzi.io/cluster: demo-kafka-cluster
spec:
  partitions: 3
  replicas: 1
EOF
```

### 7. Deploy Debezium Connector
```bash
# Deploy Kafka Connect with Debezium
kubectl apply -f kubernetes/debezium/

# Wait for it to be ready
kubectl wait --for=condition=ready kafkaconnect/debezium-connect -n kafka --timeout=600s
```

### 8. Create Secrets for Credentials
```bash
# Oracle credentials
kubectl create secret generic oracle-credentials \
  --from-literal=username=admin \
  --from-literal=password='<from-secrets-manager>' \
  -n kafka

# Debezium credentials  
kubectl create secret generic debezium-credentials \
  --from-literal=username=debezium \
  --from-literal=password='D3b3z1um#2024' \
  -n kafka
```

## üöÄ All-in-One Init Script

‡∏™‡∏£‡πâ‡∏≤‡∏á `init-after-terraform.sh`:

```bash
#!/bin/bash
set -e

echo "üöÄ Initializing CDC Pipeline after Terraform..."

# 1. Configure kubectl
echo "1. Configuring kubectl..."
aws eks update-kubeconfig --region ap-southeast-1 --name oracle-cdc-demo-eks

# 2. Install Strimzi
echo "2. Installing Strimzi..."
kubectl create namespace kafka || true
kubectl apply -f 'https://strimzi.io/install/latest?namespace=kafka' -n kafka

# 3. Deploy Kafka
echo "3. Deploying Kafka cluster..."
kubectl apply -f kubernetes/kafka/01-kafka-cluster.yaml

# 4. Get credentials from Terraform
echo "4. Getting database credentials..."
cd terraform/environments/demo
RDS_ENDPOINT=$(terraform output -raw rds_endpoint)
RDS_SECRET_ARN=$(terraform output -raw rds_master_password_secret_arn)
REDSHIFT_ENDPOINT=$(terraform output -raw redshift_endpoint)
cd ../../..

# 5. Wait for Kafka
echo "5. Waiting for Kafka..."
kubectl wait --for=condition=ready kafka/demo-kafka-cluster -n kafka --timeout=600s

# 6. Create topics
echo "6. Creating Kafka topics..."
bash scripts/init/03-create-topics.sh

# 7. Deploy Debezium
echo "7. Deploying Debezium..."
kubectl apply -f kubernetes/debezium/

echo "‚úÖ Infrastructure initialized!"
echo ""
echo "‚ö†Ô∏è  MANUAL STEPS REQUIRED:"
echo "1. Run scripts/init/01-init-oracle-db.sql on Oracle at: $RDS_ENDPOINT"
echo "2. Run scripts/init/02-init-redshift.sql on Redshift at: $REDSHIFT_ENDPOINT"
echo "3. Start the CDC connector: kubectl apply -f kubernetes/debezium/04-oracle-connector.yaml"
```

## üîë Default Credentials Summary

| Component | Username | Password | Where |
|-----------|----------|----------|-------|
| RDS Oracle Admin | admin | In Secrets Manager | `oracle-cdc-demo-rds-oracle-master-*` |
| Oracle CDC User | cdc_user | CdcDemo2024! | Create via SQL |
| Oracle Debezium | debezium | D3b3z1um#2024 | Create via SQL |
| Redshift Admin | admin | In Secrets Manager | `oracle-cdc-demo-redshift-master-*` |

## üìù Best Practices

1. **Use Secrets Manager**: ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö production ‡∏Ñ‡∏ß‡∏£‡πÉ‡∏ä‡πâ AWS Secrets Manager ‡∏´‡∏£‡∏∑‡∏≠ K8s Secrets
2. **Rotate Passwords**: ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô default passwords ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
3. **Least Privilege**: ‡πÉ‡∏´‡πâ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏ó‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
4. **Monitoring**: Setup CloudWatch alerts
5. **Backup**: Enable automated backups

‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏ä‡πà‡∏ß‡∏¢ run step ‡πÑ‡∏´‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏û‡∏¥‡πÄ‡∏®‡∏©‡πÑ‡∏´‡∏°‡∏Ñ‡∏£‡∏±‡∏ö?